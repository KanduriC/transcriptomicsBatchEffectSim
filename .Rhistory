# counts_class_3[is.na(counts_class_3)] <- 0
# colnames(counts_class_3) <- colnames(counts_mat)
## for sub-setting only those genes that are expressed in any of the sample groups
# counts_class_3 <- counts_class_3[,met$Sample]
# group_class <- group.summarize_3g(counts_class_3,c(1:10),c(11:20), c(21:30),group_names=c('KRAS','BRAF', 'WT'))
# group_class <- as.data.frame(group_class)
# expressed_in_any <- apply(group_class,1,function(x){ifelse(any(x==2),2,1)})
# expressed_in_any <- expressed_in_any[which(expressed_in_any==2)]
# ddsColl_exprsd <- ddsColl[names(expressed_in_any), ]
# ddsColl_exprsd <- DESeq(ddsColl_exprsd, minReplicatesForReplace = Inf)
# tpm_mat <- tpm_mat[names(expressed_in_any),]
# rm(classif_counts, counts_class, counts_class_2, counts_class_3, group_class, ddsColl, expressed_in_any, rld, classif, counts_mat)
#
# save(tpm_mat, file="pmCrc_tpm_mat_exprsd.RData")
# save(ddsColl_exprsd, file="pmCrc_ddsColl_exprsd.RData")
## compute mean and median of the genotype groups for rlog counts
# rld_exprsd <- rlog(ddsColl_exprsd, blind=FALSE)
# counts_exprsd <- assay(rld_exprsd)
# counts_exprsd <- counts_exprsd[,met$Sample]
# save(counts_exprsd, file="pmCrc_rlog_counts_exprsd.RData")
# median_rlog <- group.medians_6g(counts_exprsd, group1_ind = 1:10, group2_ind = 11:20, group3_ind = 21:30, group4_ind = 1:20, group5_ind = 11:13, group6_ind = 14:20, group_names = c("KRAS_rlog_median","BRAF_rlog_median","WT_rlog_median","KRAS+BRAF_rlog_median", "BRAF_msi_rlog_median", "BRAF_mss_rlog_median"))
# median_rlog <- as.data.frame(median_rlog)
# median_rlog$ENSG <- rownames(median_rlog)
# mean_rlog <- group.means_6g(counts_exprsd, group1_ind = 1:10, group2_ind = 11:20, group3_ind = 21:30, group4_ind = 1:20, group5_ind = 11:13, group6_ind = 14:20, group_names = c("KRAS_rlog_mean","BRAF_rlog_mean","WT_rlog_mean","KRAS+BRAF_rlog_mean", "BRAF_msi_rlog_mean", "BRAF_mss_rlog_mean"))
# mean_rlog <- as.data.frame(mean_rlog)
# mean_rlog$ENSG <- rownames(mean_rlog)
## compute mean and median of the genotype groups for "normalized" counts that are internally used by DESeq2 for differential expression analysis
# rawcounts_exprsd <- counts(ddsColl_exprsd,normalized=T)
# rawcounts_exprsd <- rawcounts_exprsd[,met$Sample]
# save(rawcounts_exprsd, file="pmCrc_normalized_counts_exprsd.RData")
# median_rawcount <- group.medians_6g(log2(rawcounts_exprsd+0.01),group1_ind = 1:10, group2_ind = 11:20, group3_ind = 21:30, group4_ind = 1:20, group5_ind = 11:13, group6_ind = 14:20,group_names = c("KRAS_normcount_median","BRAF_normcount_median","WT_normcount_median","KRAS+BRAF_normcount_median", "BRAF_msi_normcount_median", "BRAF_mss_normcount_median"))
# median_rawcount <- as.data.frame(median_rawcount)
# median_rawcount$ENSG <- rownames(median_rawcount)
# mean_rawcount <- group.means_6g(log2(rawcounts_exprsd+0.01), group1_ind = 1:10, group2_ind = 11:20, group3_ind = 21:30, group4_ind = 1:20, group5_ind = 11:13, group6_ind = 14:20, group_names = c("KRAS_normcount_mean","BRAF_normcount_mean","WT_normcount_mean","KRAS+BRAF_normcount_mean", "BRAF_msi_normcount_mean", "BRAF_mss_normcount_mean"))
# mean_rawcount <- as.data.frame(mean_rawcount)
# mean_rawcount$ENSG <- rownames(mean_rawcount)
## compute mean and median of the genotype groups for TPM matrix
# tpm_matrix <- (tpm_mat[,met$Sample])
# median_tpm <- group.medians_6g(log2(tpm_matrix+0.01),group1_ind = 1:10, group2_ind = 11:20, group3_ind = 21:30, group4_ind = 1:20, group5_ind = 11:13, group6_ind = 14:20, group_names = c("KRAS_tpm_median","BRAF_tpm_median","WT_tpm_median","KRAS+BRAF_tpm_median", "BRAF_msi_tpm_median", "BRAF_mss_tpm_median"))
# median_tpm <- as.data.frame(median_tpm)
# median_tpm$ENSG <- rownames(median_tpm)
# mean_tpm <- group.means_6g(log2(tpm_matrix+0.01),group1_ind = 1:10, group2_ind = 11:20, group3_ind = 21:30, group4_ind = 1:20, group5_ind = 11:13, group6_ind = 14:20, group_names = c("KRAS_tpm_mean","BRAF_tpm_mean","WT_tpm_mean","KRAS+BRAF_tpm_mean", "BRAF_msi_tpm_mean", "BRAF_mss_tpm_mean"))
# mean_tpm <- as.data.frame(mean_tpm)
# mean_tpm$ENSG <- rownames(mean_tpm)
# avg_exprs <- mean_rawcount %>% left_join(median_rawcount) %>% left_join(mean_rlog) %>% left_join(median_rlog) %>% left_join(mean_tpm) %>% left_join(median_tpm)
# rownames(avg_exprs) <- avg_exprs$ENSG
# avg_exprs <- avg_exprs[,-c(7)]
# avg_exprs <- round(avg_exprs,2)
# avg_exprs$ENSG <- rownames(avg_exprs)
# save(avg_exprs, file="pmCrc_avgexprs_groups.RData")
# kras_meta <- met[met$genotype %in% c("KRAS","WT"),]
# kras_wt <- ddsColl_exprsd[,kras_meta$Sample]
# kras_wt$genotype <- droplevels(kras_wt$genotype)
# kras_wt$Sample <- droplevels(kras_wt$Sample)
# design(kras_wt) <- formula(~ genotype)
# kras_wt <- DESeq(kras_wt)
# res <- results(kras_wt, contrast=c("genotype","KRAS","WT"), independentFiltering = F)
# resLFC <- lfcShrink(kras_wt, contrast=c("genotype","KRAS","WT"), res=res,type="ashr")
# summary(resLFC)
finalres_braf_signif <- finalres_braf %>% dplyr::filter(padj<0.1)
finalres_braf_filt <- finalres_braf_signif %>% dplyr::filter(med_normcount_foldchange_braf_wt >=1 | med_normcount_foldchange_braf_wt<=-1)
finalres_kras_braf_signif <- finalres_kras_braf %>% dplyr::filter(padj<=0.1)
finalres_kras_braf_filt <- finalres_kras_braf_signif %>% dplyr::filter(med_normcount_foldchange_kras_braf>=1 | med_normcount_foldchange_kras_braf<=-1)
View(finalres_kras_braf_filt)
temp1 <- c(2,3,4,5)
temp2 <- c(1,2,3)
union(temp1,temp2)
geneset_deg_braf <- union(finalres_kras_braf_filt$ENSG, finalres_braf_filt$ENSG)
View(rawcounts_exprsd)
View(rawcounts_exprsd)
length(finalres_braf_filt$Gene)
length(unique(finalres_braf_filt$Gene))
length(finalres_kras_braf_filt$Gene)
length(unique(finalres_kras_braf_filt$Gene))
geneset_deg_braf <- union(finalres_kras_braf_filt$Gene, finalres_braf_filt$Gene)
head(geneset_deg_braf)
deg_braf_exprs_mat <- rawcounts_exprsd[geneset_deg_braf, ]
View(deg_braf_exprs_mat)
View(met)
meta_copy <- met
rownames(meta_copy) <- meta_copy$Sample
meta_copy$Sample <- NULL
meta_copy$msi_status <- NULL
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = F)
meta_copy <- met
rownames(meta_copy) <- meta_copy$Sample
meta_copy$Sample <- NULL
meta_copy$msi_staus <- NULL
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = F, cluster_cols = F)
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F)
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(100))
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(20))
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(10))
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(5))
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(50))
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(100))
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(100), show_rownames=F)
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(100), show_rownames=F, treeheight_row=0)
annotation_colors <- c("#009E73", "#E69F00", "#56B4E9")
annot_colors <- c("#009E73", "#E69F00", "#56B4E9")
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(100), show_rownames=F, treeheight_row=0, annotation_colors=annot_colors)
View(meta_copy)
annot_colors <- list(genotype=c(KRAS="#009E73", BRAF="#E69F00", WT="#56B4E9"))
braf_all_genes_heatmap <- pheatmap::pheatmap(deg_braf_exprs_mat,annotation_col = meta_copy, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(100), show_rownames=F, treeheight_row=0, annotation_colors=annot_colors)
?group.medians
mean_vector_index <- function(class_vector, indices){
med <- mean(as.numeric(class_vector[indices]))
return(med)
}
mean_three_groups <- function(class_vector,group1_ind,group2_ind,group3_ind){
means <- cbind(mean_vector_index(class_vector,group1_ind),mean_vector_index(class_vector,group2_ind),mean_vector_index(class_vector,group3_ind))
return(means)
}
group.means_3g <- function(dataframe,group1_ind,group2_ind,group3_ind,group_names){
group_means <- t(apply(dataframe,1,function(x){mean_three_groups(x,group1_ind,group2_ind,group3_ind)}))
colnames(group_means) <- group_names
return(group_means)
}
mean_rawcount <- group.means_3g(deg_braf_exprs_mat, group1_ind = 1:10, group2_ind = 11:20, group3_ind = 21:30, group_names = c("KRAS","BRAF","WT"))
mean_rawcount <- as.data.frame(mean_rawcount)
View(mean_rawcount)
braf_all_genes_grouped_heatmap <- pheatmap::pheatmap(mean_rawcount, scale = "row", cluster_rows = T, cluster_cols = F, color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(100), show_rownames=F, treeheight_row=0)
save_pheatmap_pdf(braf_all_genes_heatmap, "braf_all_genes_heatmap.pdf", width = 12, height = 12)
save_pheatmap_pdf <- function(x, filename, width=7, height=7) {
stopifnot(!missing(x))
stopifnot(!missing(filename))
pdf(filename, width=width, height=height)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
save_pheatmap_pdf(braf_all_genes_heatmap, "braf_all_genes_heatmap.pdf", width = 12, height = 12)
save_pheatmap_pdf(braf_all_genes_grouped_heatmap, "braf_all_genes_grouped_heatmap.pdf", width = 4, height = 12)
save_pheatmap_pdf(braf_all_genes_heatmap, "braf_all_genes_heatmap.pdf", width = 7, height = 10)
save_pheatmap_pdf(braf_all_genes_grouped_heatmap, "braf_all_genes_grouped_heatmap.pdf", width = 3, height = 10)
save_pheatmap_pdf(braf_all_genes_grouped_heatmap, "braf_all_genes_grouped_heatmap.pdf", width = 2, height = 10)
q()
sim_params <-
list(
approx_n_genes = 5000,
n_examples = 60,
batch1_indices = 1:30,
batch2_indices = 31:60,
batch1_group1_indices = 1:20,
batch1_group2_indices = 21:30,
batch2_group1_indices = 31:40,
batch2_group2_indices = 41:60,
group1_indices = c(1:20, 31:40),
group2_indices = c(21:30, 41:60),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
results_list <- list()
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
devtools::load_all()
setwd("~/Documents/Projects/causalAIRR/transcriptomicsBatchEffectSim")
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
devtools::load_all()
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
data_objs <- split_train_test(sim_params = sim_params, data_objs = data_objs, batch_effects_exist=FALSE)
results_list <- deseq_feature_selection(data_objs$train_data, data_objs$train_metadata, data_objs$group_means_filt, data_objs$diff_exp_indices, sim_params, results_list)
data_objs$post_sim_group_means
View(data_objs$post_sim_group_means)
simulated_datamat = data_objs$train_data
coldata = data_objs$train_metadata
group_means_filt = data_objs$group_means_filt
diff_exp_indices = data_objs$diff_exp_indices
sim_params = sim_params
results_list = results_list
dds <-
DESeq2::DESeqDataSetFromMatrix(countData = simulated_datamat,
colData = coldata,
design = ~ group)
dds <- DESeq2::DESeq(dds)
res <-
DESeq2::results(
dds,
contrast = c("group", "group_1", "group_2"),
independentFiltering = F
)
resLFC <-
DESeq2::lfcShrink(
dds,
contrast = c("group", "group_1", "group_2"),
res = res,
type = "ashr"
)
res.sig_without_batch <- data.frame(resLFC)
View(res.sig_without_batch)
sim_params <-
list(
approx_n_genes = 15000,
n_examples = 60,
batch1_indices = 1:30,
batch2_indices = 31:60,
batch1_group1_indices = 1:20,
batch1_group2_indices = 21:30,
batch2_group1_indices = 31:40,
batch2_group2_indices = 41:60,
group1_indices = c(1:20, 31:40),
group2_indices = c(21:30, 41:60),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
results_list <- list()
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
data_objs <- split_train_test(sim_params = sim_params, data_objs = data_objs, batch_effects_exist=FALSE)
results_list <- deseq_feature_selection(data_objs$train_data, data_objs$train_metadata, data_objs$group_means_filt, data_objs$diff_exp_indices, sim_params, results_list)
simulated_datamat = data_objs$train_data
coldata = data_objs$train_metadata
group_means_filt = data_objs$group_means_filt
diff_exp_indices = data_objs$diff_exp_indices
sim_params = sim_params
results_list = results_list
dds <-
DESeq2::DESeqDataSetFromMatrix(countData = simulated_datamat,
colData = coldata,
design = ~ group)
dds <- DESeq2::DESeq(dds)
res <-
DESeq2::results(
dds,
contrast = c("group", "group_1", "group_2"),
independentFiltering = F
)
resLFC <-
DESeq2::lfcShrink(
dds,
contrast = c("group", "group_1", "group_2"),
res = res,
type = "ashr"
)
res.sig_without_batch <- data.frame(resLFC)
View(res.sig_without_batch)
resLFC <-
DESeq2::lfcShrink(
dds,
contrast = c("group", "group_1", "group_2"),
res = res,
type = "apeglm"
)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("apeglm")
resLFC <-
DESeq2::lfcShrink(
dds,
contrast = c("group", "group_1", "group_2"),
res = res,
type = "apeglm"
)
resLFC <-
DESeq2::lfcShrink(
dds,
contrast = c("group", "group_1", "group_2"),
res = res,
type = "normal"
)
res.sig_without_batch <- data.frame(resLFC)
View(res.sig_without_batch)
View(group_means_filt)
View(data_objs$post_sim_group_means)
data_objs$post_sim_group_means[gene_13276,]
data_objs$post_sim_group_means["gene_13276",]
sim_params_without_batch <-
list(
approx_n_genes = 500,
n_examples = 60,
group1_indices = 1:30,
group2_indices = 31:60,
batch_difference_threshold = 1,
n_true_diff_genes = 50,
n_true_upreg_genes = 25,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
results_list <- list()
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
sim_params <- sim_params_without_batch
results_list <- list()
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
data_objs <- split_train_test(sim_params = sim_params, data_objs = data_objs, batch_effects_exist=FALSE)
results_list <- deseq_feature_selection(data_objs$train_data, data_objs$train_metadata, data_objs$group_means_filt, data_objs$diff_exp_indices, sim_params, results_list)
View(results_list)
dim(data_objs$exprs_mat)
sim_params_without_batch <-
list(
approx_n_genes = 15000,
n_examples = 60,
group1_indices = 1:30,
group2_indices = 31:60,
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
sim_params <- sim_params_without_batch
results_list <- list()
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
data_objs <- split_train_test(sim_params = sim_params, data_objs = data_objs, batch_effects_exist=FALSE)
results_list <- deseq_feature_selection(data_objs$train_data, data_objs$train_metadata, data_objs$group_means_filt, data_objs$diff_exp_indices, sim_params, results_list)
View(results_list)
simulated_datamat = data_objs$train_data
coldata = data_objs$train_metadata
group_means_filt = data_objs$group_means_filt
diff_exp_indices = data_objs$diff_exp_indices
sim_params = sim_params
results_list = results_list
dds <-
DESeq2::DESeqDataSetFromMatrix(countData = simulated_datamat,
colData = coldata,
design = ~ group)
dds <- DESeq2::DESeq(dds)
res <-
DESeq2::results(
dds,
contrast = c("group", "group_1", "group_2"),
independentFiltering = F
)
resLFC <-
DESeq2::lfcShrink(
dds,
contrast = c("group", "group_1", "group_2"),
res = res,
type = "normal"
)
res.sig_without_batch <- data.frame(resLFC)
View(res.sig_without_batch)
res.sig_without_batch <-
res.sig_without_batch[res.sig_without_batch$padj < 0.10,]
dim(simulated_datamat)
View(simulated_datamat)
temp2 <- simulated_datamat[rownames(res.sig_without_batch),]
rownames(res.sig_without_batch)
View(res.sig_without_batch)
res.sig_without_batch <- res.sig_without_batch[complete.cases(res.sig_without_batch), ]
temp2 <- simulated_datamat[rownames(res.sig_without_batch),]
View(temp2)
devtools::load_all()
sim_params_without_batch <-
list(
approx_n_genes = 15000,
n_examples = 60,
group1_indices = 1:30,
group2_indices = 31:60,
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
sim_params <- sim_params_without_batch
results_list <- list()
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
data_objs <- split_train_test(sim_params = sim_params, data_objs = data_objs, batch_effects_exist=FALSE)
results_list <- deseq_feature_selection(data_objs$train_data, data_objs$train_metadata, data_objs$group_means_filt, data_objs$diff_exp_indices, sim_params, results_list)
View(results_list)
devtools::load_all()
sim_params_without_batch <-
list(
approx_n_genes = 15000,
n_examples = 60,
group1_indices = 1:30,
group2_indices = 31:60,
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
results_list <- list()
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
sim_params <- sim_params_without_batch
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
data_objs <- split_train_test(sim_params = sim_params, data_objs = data_objs, batch_effects_exist=FALSE)
results_list <- deseq_feature_selection(data_objs$train_data, data_objs$train_metadata, data_objs$group_means_filt, data_objs$diff_exp_indices, sim_params, results_list)
results_list$metrics
devtools::load_all()
sim_params_without_batch <-
list(
approx_n_genes = 15000,
n_examples = 60,
group1_indices = 1:30,
group2_indices = 31:60,
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
sim_params <- sim_params_without_batch
res_1 <- run_single_analysis(sim_params=sim_params, batch_effects_exist = FALSE)
names(res_1)
res_1$deseq_results
res_1$logistic_reg_metrics
sim_params
length(1:20)
length(1:20)/length(21:30)
20/30
round(20/30 * 100)
round(22/30 * 100)
round(23/30 * 100)
devtools::load_all()
sim_params_without_batch <-
list(
approx_n_genes = 15000,
n_examples = 60,
group1_indices = 1:30,
group2_indices = 31:60,
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
sim_params <- sim_params_without_batch
res_1 <- run_single_analysis(sim_params=sim_params, batch_effects_exist = FALSE)
devtools::load_all()
sim_params <-
list(
approx_n_genes = 15000,
n_examples = 60,
batch1_indices = 1:30,
batch2_indices = 31:60,
batch1_group1_indices = 1:20,
batch1_group2_indices = 21:30,
batch2_group1_indices = 31:40,
batch2_group2_indices = 41:60,
group1_indices = c(1:20, 31:40),
group2_indices = c(21:30, 41:60),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
sim_params_without_batch <-
list(
approx_n_genes = 15000,
n_examples = 60,
group1_indices = 1:30,
group2_indices = 31:60,
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
sim_params <- sim_params_without_batch
res_1 <- run_single_analysis(sim_params=sim_params, batch_effects_exist = FALSE)
res_1$deseq_results
res_1$logistic_reg_metrics
View(res_1$logistic_coefs$no_batch_signif_no_reg$logistic_coef)
dim(res_1$simulated_data_objs$exprs_mat)
sim_params <-
list(
approx_n_genes = 15000,
n_examples = 60,
batch1_indices = 1:30,
batch2_indices = 31:60,
batch1_group1_indices = 1:20,
batch1_group2_indices = 21:30,
batch2_group1_indices = 31:40,
batch2_group2_indices = 41:60,
group1_indices = c(1:20, 31:40),
group2_indices = c(21:30, 41:60),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
res_1 <- run_single_analysis(sim_params=sim_params, batch_effects_exist = TRUE)
sim_params <-
list(
approx_n_genes = 15000,
n_examples = 60,
batch1_indices = 1:30,
batch2_indices = 31:60,
batch1_group1_indices = 1:20,
batch1_group2_indices = 21:30,
batch2_group1_indices = 31:40,
batch2_group2_indices = 41:60,
group1_indices = c(1:20, 31:40),
group2_indices = c(21:30, 41:60),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70
)
res_1 <- run_single_analysis(sim_params=sim_params, batch_effects_exist = TRUE)
q()
