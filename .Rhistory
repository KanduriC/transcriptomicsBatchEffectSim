library(readxl)
deg <- read_excel("transcriptomics_DEG_results_GCF0620_30052022.xlsx")
class(deg)
excel_sheets(deg)
excel_sheets("transcriptomics_DEG_results_GCF0620_30052022.xlsx")
lung_specific <- read.table("tissue_category_rna_lung_Tissue.tsv", header = T, sep = "\t")
liver_specific <- read.table("tissue_category_rna_liver_Tissue.tsv", header = T, sep = "\t")
View(lung_specific)
liver_lung <- read_excel("transcriptomics_DEG_results_GCF0620_30052022.xlsx", sheet = "LiverVsLung")
liver_pm <- read_excel("transcriptomics_DEG_results_GCF0620_30052022.xlsx", sheet = "LiverVsPm")
lung_pm <- read_excel("transcriptomics_DEG_results_GCF0620_30052022.xlsx", sheet = "LungVsPm")
length(intersect(liver_lung$Gene,lung_specific$Gene))
length(intersect(liver_lung$Gene,liver_specific$Gene))
library(tidyr)
temp2 <- liver_lung %>% dplyr::filter(Gene !%in% lung_specific$Gene) %>% dplyr::filter(Gene !%in% liver_specific$Gene)
temp2 <- liver_lung %>% dplyr::filter(!Gene %in% lung_specific$Gene) %>% dplyr::filter(!Gene %in% liver_specific$Gene)
807+97
14448-904
length(unique(liver_lung$Gene))
library(readxl)
library(tidyr)
liver_lung <- read_excel("transcriptomics_DEG_results_GCF0620_30052022.xlsx", sheet = "LiverVsLung")
liver_pm <- read_excel("transcriptomics_DEG_results_GCF0620_30052022.xlsx", sheet = "LiverVsPm")
lung_pm <- read_excel("transcriptomics_DEG_results_GCF0620_30052022.xlsx", sheet = "LungVsPm")
lung_specific <- read.table("tissue_category_rna_lung_Tissue.tsv", header = T, sep = "\t")
liver_specific <- read.table("tissue_category_rna_liver_Tissue.tsv", header = T, sep = "\t")
liver_lung <- liver_lung %>% dplyr::filter(!Gene %in% lung_specific$Gene) %>% dplyr::filter(!Gene %in% liver_specific$Gene)
liver_pm <- liver_pm %>% dplyr::filter(!Gene %in% liver_specific$Gene)
lung_pm <- lung_pm %>% dplyr::filter(!Gene %in% lung_specific$Gene)
sheets <- list("LiverVsLung"=liver_lung,"LiverVsPm"=liver_pm,"LungVsPm"=lung_pm)
write_xlsx(sheets, "/Users/kanduric/Documents/Projects/christin_transcriptomics/GCF0620/transcriptomics_DEG_results_GCF0620_20022022_filteredout_lung_liver_tissue_specific_genes.xlsx")
library(writexl)
write_xlsx(sheets, "/Users/kanduric/Documents/Projects/christin_transcriptomics/GCF0620/transcriptomics_DEG_results_GCF0620_20022022_filteredout_lung_liver_tissue_specific_genes.xlsx")
q()
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(ggplot2)
library(UpSetR)
library(grid)     ## Need to attach (and not just load) grid package
library(pheatmap)
library(RColorBrewer)
read_res_files <- function(res_file){
res <- read.table(res_file, header = T, sep = "\t")
res <- res %>% dplyr::filter(FDR<=0.10)
return(res)
}
file_list <- list.files(pattern = ".txt")
results_list <- lapply(file_list, read_res_files)
names(results_list) <- c("BRAF_downregulated_vs_KRAS",
"BRAF_downregulated_vs_WT",
"BRAF_upregulated_vs_KRAS",
"BRAF_upregulated_vs_WT")
res_df <- results_list %>% bind_rows(.id = "comparison")
View(res_df)
res_df <- res_df[-c(4,5,6, 11, 13),]
gene_sets <- sapply(res_df$Genes, function(x){unlist(strsplit(x,split=","))})
names(gene_sets) <- res_df$Description
View(res_df)
gene_sets_df <- ComplexHeatmap::list_to_matrix(gene_sets)
View(gene_sets_df)
gene_sets_df_2 <- melt(gene_sets_df)
colnames(res_df)
gene_sets_df_long <- gene_sets_df %>% pivot_longer(everything(), names_to = "Description", values_to = "presence")
gene_sets_df <- as.data.frame(gene_sets_df)
gene_sets_df_long <- gene_sets_df %>% pivot_longer(everything(), names_to = "Description", values_to = "presence")
View(gene_sets_df_long)
gene_sets_df$Gene <- rownames(gene_sets_df)
gene_sets_df_long <- gene_sets_df %>% pivot_longer(!Gene, names_to = "Description", values_to = "presence")
res_df_2 <- res_df %>% dplyr::mutate(direction = case_when(grepl("down", comparison) ~ "down", grepl("up", comparison, ignore.case = TRUE) ~"up")) %>% dplyr::select(Description, FDR, direction)
View(res_df_2)
View(res_df)
View(res_df_2)
pathway_dat <- gene_sets_df_long %>% left_join(res_df_2)
View(pathway_dat)
ggplot(pathway_dat, aes(x=Gene,y=Description,fill=presence))+geom_tile()
ggplot(pathway_dat, aes(x=Gene,y=Description,fill=as.factor(presence)))+geom_tile()
pathway_dat <- gene_sets_df_long %>% left_join(res_df_2) %>% dplyr::mutate(type=paste0(presence, direction))
pathway_dat <- gene_sets_df_long %>% left_join(res_df_2) %>% dplyr::mutate(type=paste0(presence, direction)) %>% mutate(type=replace(type, presence==0, 0)) %>% as.data.frame()
ggplot(pathway_dat, aes(x=Gene,y=Description,fill=as.factor(type)))+geom_tile()
colorRampPalette(rev(brewer.pal(n = 7, name ="RdWhBu")))(3)
colorRampPalette(rev(brewer.pal(n = 7, name ="RdBu")))(3)
ggplot(pathway_dat, aes(x=Gene,y=Description,fill=as.factor(type)))+geom_tile()+scale_fill_manual(values=c("#2166AC", "#F7F7F7", "#B2182B"))
ggplot(pathway_dat, aes(x=Gene,y=Description,fill=as.factor(type)))+geom_tile()+scale_fill_manual(values=c("#F7F7F7", "#2166AC","#B2182B"))
ggplot(pathway_dat, aes(x=Gene,y=Description))+geom_tile(aes(width=0.97,height=0.97,fill=as.factor(type)),color="white")+scale_fill_manual(values=c("#F7F7F7", "#2166AC","#B2182B"))
ggplot(pathway_dat, aes(x=Gene,y=Description))+geom_tile(aes(width=0.97,height=0.97,fill=as.factor(type)),color="white")+scale_fill_manual(values=c("#F7F7F7", "#2166AC","#B2182B"))+theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))
p18 <- ggplot(pathway_dat, aes(x=Gene,y=Description))+geom_tile(aes(width=0.97,height=0.97,fill=as.factor(type)),color="white")+scale_fill_manual(values=c("#F7F7F7", "#2166AC","#B2182B"))+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))
p18 <- ggplot(pathway_dat, aes(x=Gene,y=Description))+geom_tile(aes(width=0.97,height=0.97,fill=as.factor(type)),color="white")+scale_fill_manual(values=c("#F7F7F7", "#2166AC","#B2182B"))+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))
p18
p18 <- ggplot(pathway_dat, aes(x=Gene,y=Description))+geom_tile(aes(width=0.97,height=0.97,fill=as.factor(type)),color="white")+scale_fill_manual(values=c("#F7F7F7", "#2166AC","#B2182B"))+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p18
View(pathway_dat)
ggplot(pathway_dat, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
View(res_df)
-log10(0.00032)
View(res_df)
View(res_df_2)
ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
library(patchwork)
library(patchwork)
p36 <- p18 + p27
p27 <- ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p36 <- p18 + p27
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=10, height=6)
ggsave("updated_pathway_analysis_figure.pdf", plot=p18, width=10, height=6)
ggsave("updated_pathway_analysis_figure.pdf", plot=p18, width=15, height=6)
ggsave("updated_pathway_analysis_figure.pdf", plot=p18, width=15, height=4)
p36 <- wrap_plots(p18, p27, ncol = 2)
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
aligned_plots <- align_plots(p18, p27, align = "h", axis = "tb", axis_line = TRUE)
aligned_plots <- align_plots(p18, p27, align = "h", axis = "lr", axis_line = TRUE)
p18 <- ggplot(pathway_dat, aes(x=Gene,y=Description))+geom_tile(aes(width=0.97,height=0.97,fill=as.factor(type)),color="white")+scale_fill_manual(values=c("#F7F7F7", "#2166AC","#B2182B"))+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p27 <- ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
aligned_plots <- align_plots(p18, p27, align = "h", axis = "lr", axis_line = TRUE)
?patchwork::wrap_plots()
p27 <- ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_blank(),axis.ticks.y=element_blank(),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_blank(),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p36 <- wrap_plots(p18, p27, ncol = 2)
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
p36 <- wrap_plots(p18, p27, ncol = 2)
p36 <- p36 + plot_layout(widths = c(4, 1), heights = c(1, 1)) & plot_spacer()
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
p36 <- wrap_plots(p18, p27, ncol = 2)
p36 <- p36 + plot_layout(widths = c(4, 1), heights = c(1, 1))
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
p36 <- wrap_plots(p18, p27, ncol = 2)
p36 <- p36 + plot_layout(widths = c(5, 1), heights = c(1, 1))
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
p36 <- p36 + plot_layout(widths = c(4, 1))
p36 <- wrap_plots(p18, p27, ncol = 2)
p36 <- p36 + plot_layout(widths = c(4, 1))
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
p27 <- ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_blank(),axis.ticks.y=element_blank(),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_blank(),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("-log10(FDR)")
p36 <- wrap_plots(p18, p27, ncol = 2)
p36 <- p36 + plot_layout(widths = c(4, 1))
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
p27 <- ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = -20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_blank(),axis.ticks.y=element_blank(),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_blank(),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("-log10(FDR)")
p36 <- wrap_plots(p18, p27, ncol = 2)
p36 <- p36 + plot_layout(widths = c(4, 1))
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
p27 <- ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = -60, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_blank(),axis.ticks.y=element_blank(),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_blank(),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("-log10(FDR)")
p36 <- wrap_plots(p18, p27, ncol = 2)
p36 <- p36 + plot_layout(widths = c(4, 1))
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
p27 <- ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = -100, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_blank(),axis.ticks.y=element_blank(),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_blank(),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("-log10(FDR)")
p36 <- wrap_plots(p18, p27, ncol = 2)
p36 <- p36 + plot_layout(widths = c(4, 1))
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
View(res_df_2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(ggplot2)
library(UpSetR)
library(grid)     ## Need to attach (and not just load) grid package
library(pheatmap)
library(RColorBrewer)
library(patchwork)
read_res_files <- function(res_file){
res <- read.table(res_file, header = T, sep = "\t")
res <- res %>% dplyr::filter(FDR<=0.10)
return(res)
}
file_list <- list.files(pattern = ".txt")
results_list <- lapply(file_list, read_res_files)
names(results_list) <- c("BRAF_downregulated_vs_KRAS",
"BRAF_downregulated_vs_WT",
"BRAF_upregulated_vs_KRAS",
"BRAF_upregulated_vs_WT")
res_df <- results_list %>% bind_rows(.id = "comparison")
res_df <- res_df[-c(4,5,6, 11, 13),]
gene_sets <- sapply(res_df$Genes, function(x){unlist(strsplit(x,split=","))})
names(gene_sets) <- res_df$Description
gene_sets_df <- ComplexHeatmap::list_to_matrix(gene_sets)
gene_sets_df <- as.data.frame(gene_sets_df)
gene_sets_df$Gene <- rownames(gene_sets_df)
gene_sets_df_long <- gene_sets_df %>% pivot_longer(!Gene, names_to = "Description", values_to = "presence")
res_df_2 <- res_df %>% dplyr::mutate(direction = case_when(grepl("down", comparison) ~ "down", grepl("up", comparison, ignore.case = TRUE) ~"up")) %>% dplyr::select(Description, FDR, direction)
View(res_df_2)
res_df_2 <- res_df_2[with(res_df_2, order(direction, FDR)), ]
pathway_dat <- gene_sets_df_long %>% left_join(res_df_2) %>% dplyr::mutate(type=paste0(presence, direction)) %>% mutate(type=replace(type, presence==0, 0)) %>% as.data.frame()
pathway_dat$Description <- as.factor(pathway_dat$Description, levels=res_df_2$Description)
pathway_dat$Description <- factor(pathway_dat$Description, levels=res_df_2$Description)
p18 <- ggplot(pathway_dat, aes(x=Gene,y=Description))+geom_tile(aes(width=0.97,height=0.97,fill=as.factor(type)),color="white")+scale_fill_manual(values=c("#F7F7F7", "#2166AC","#B2182B"))+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p27 <- ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = -100, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_blank(),axis.ticks.y=element_blank(),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_blank(),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("-log10(FDR)")
p36 <- wrap_plots(p18, p27, ncol = 2)
p36 <- p36 + plot_layout(widths = c(4, 1))
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
-log10(0.057)
res_df_2$Description <- factor(res_df_2$Description, levels=res_df_2$Description)
ggplot(pathway_dat, aes(x=Gene,y=Description))+geom_tile(aes(width=0.97,height=0.97,fill=as.factor(type)),color="white")+scale_fill_manual(values=c("#F7F7F7", "#2166AC","#B2182B"))+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = -100, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_blank(),axis.ticks.y=element_blank(),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_blank(),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("-log10(FDR)")
p18 <- ggplot(pathway_dat, aes(x=Gene,y=Description))+geom_tile(aes(width=0.97,height=0.97,fill=as.factor(type)),color="white")+scale_fill_manual(values=c("#F7F7F7", "#2166AC","#B2182B"))+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p27 <- ggplot(res_df_2, aes(x=-log10(FDR),y=Description))+geom_bar(stat = "identity")+theme(legend.position="none",axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = -100, r = 0, b = 0, l = 0)))+theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank())+xlab("") + ylab("") +theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_blank(),axis.ticks.y=element_blank(),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_blank(),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("-log10(FDR)")
p36 <- wrap_plots(p18, p27, ncol = 2)
p36 <- p36 + plot_layout(widths = c(4, 1))
ggsave("updated_pathway_analysis_figure.pdf", plot=p36, width=18, height=4)
ggsave("updated_pathway_analysis_figure_pmCrc.pdf", plot=p36, width=18, height=4)
q()
setwd("~/Documents/Projects/causalAIRR/transcriptomicsBatchEffectSim")
devtools::load_all()
sim_params <-
list(
approx_n_genes = 5000,
n_examples = 60,
batch1_indices = 1:30,
batch2_indices = 31:60,
batch1_group1_indices = 1:20,
batch1_group2_indices = 21:30,
batch2_group1_indices = 31:40,
batch2_group2_indices = 41:60,
group1_indices = c(1:20, 31:40),
group2_indices = c(21:30, 41:60),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = TRUE
)
params_grid <- expand.grid(c(1,2), c(0.5,1))
multi_res <- multi_param_rep_sim(params_grid = params_grid, sim_params, n_times = 3)
names(multi_res)
res_obj <- lapply(multi_res, function(x){x$deseq_results})
View(res_obj)
res_obj <- res_obj %>% dplyr::bind_rows()
View(res_obj)
a <- c(rep(6,20),rep(8,20))
mean(a)
b <- scale(a)
b
p <- c(rep(6,10),rep(8,10),rep(10,10), rep(12,10))
q <- scale(p)
q
mean(p)
p <- c(rep(6,10),rep(10,10),rep(8,10), rep(12,10))
q <- scale(p)
q
params_grid <- expand.grid(c(1,2,3), c(0.5,1,2))
View(params_grid)
setwd("~/Documents/Projects/causalAIRR/transcriptomicsBatchEffectSim")
devtools::load_all()
knitr::opts_chunk$set(echo = TRUE)
options(warn = 0, message = FALSE)
set.seed(2023)
sim_params_with_batch <-
list(
approx_n_genes = 5000,
n_examples = 20,
batch1_indices = 1:10,
batch2_indices = 11:20,
batch1_group1_indices = 1:5,
batch1_group2_indices = 6:10,
batch2_group1_indices = 11:15,
batch2_group2_indices = 16:20,
group1_indices = c(1:5, 11:15),
group2_indices = c(6:10, 16:20),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = TRUE
)
sim_params_without_batch <-
list(
approx_n_genes = 5000,
n_examples = 20,
group1_indices = 1:10,
group2_indices = 11:20,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = FALSE
)
sim_params_with_batch <-
list(
approx_n_genes = 5000,
n_examples = 20,
batch1_indices = 1:10,
batch2_indices = 11:20,
batch1_group1_indices = 1:5,
batch1_group2_indices = 6:10,
batch2_group1_indices = 11:15,
batch2_group2_indices = 16:20,
group1_indices = c(1:5, 11:15),
group2_indices = c(6:10, 16:20),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = TRUE
)
sim_params_without_batch <-
list(
approx_n_genes = 5000,
n_examples = 20,
group1_indices = 1:10,
group2_indices = 11:20,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = FALSE
)
params_grid <- expand.grid(c(1,2,3), c(0.5,1,2))
multi_res <- multi_param_rep_sim(params_grid = params_grid, sim_params_with_batch, n_times = 5)
multi_res_no_batch <- multi_param_rep_sim(params_grid = params_grid, sim_params_without_batch, n_times = 5)
deseq_results <- extract_deseq_results(rep_sim_res_list = multi_res)
deseq_results_no_batch <- extract_deseq_results(rep_sim_res_list = multi_res_no_batch)
View(deseq_results)
no_batch_res <- deseq_results %>% dplyr::group_by(across(c(-values, -seed))) %>% dplyr::summarise(avg_val=mean(values), sd_val=sd(values))
View(no_batch_res)
View(deseq_results_no_batch)
View(no_batch_res)
View(deseq_results_no_batch)
View(no_batch_res)
no_batch_res <- deseq_results_no_batch %>% dplyr::group_by(across(c(-values, -seed))) %>% dplyr::summarise(avg_val=mean(values), sd_val=sd(values)) %>% dplyr::filter(metric=="sensitivity") %>% dplyr::ungroup() %>% dplyr::mutate(batch_diff=0, batch_group_corr=50)
View(no_batch_res)
batch_res <- deseq_results %>% dplyr::group_by(across(c(-values, -seed))) %>% dplyr::summarise(avg_val=mean(values), sd_val=sd(values)) %>% dplyr::filter(metric=="sensitivity") %>% dplyr::ungroup()
View(batch_res)
View(deseq_results_no_batch)
well_balanced_design <- dplyr::bind_rows(no_batch_res, batch_res)
View(well_balanced_design)
well_balanced_design$type
View(well_balanced_design)
well_balanced_design$type <- factor(well_balanced_design$type,levels = c("no batch effect","corrected", "uncorrected"))
well_balanced_design$group_diff <- as.character(well_balanced_design$group_diff)
well_balanced_design <- well_balanced_design %>% mutate(txtlab = paste(round(avg_val,2),round(sd_val,2),sep = " ± "),labtype=ifelse(avg_val<=50,"low","high"))
well_balanced_design <- well_balanced_design %>% dplyr::mutate(txtlab = paste(round(avg_val,2),round(sd_val,2),sep = " ± "),labtype=ifelse(avg_val<=50,"low","high"))
ggplot(well_balanced_design,aes(x=group_diff,y=batch_diff))+geom_tile(aes(width=0.97,height=0.97,fill=avg_val),color="white")+geom_text(aes(label=txtlab,color=labtype),show.legend = F) + scale_colour_manual(values=c("black", "white")) + theme(legend.key = element_rect(fill="steel blue",size=0.5, linetype="solid"),legend.title = element_text(margin = margin(b = 0.3, unit = 'cm')),axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 30, l = 0))) + theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank()) + theme(plot.margin = unit(c(2,1,1,1), "cm")) + ylab("average batch difference log2FC") + labs(fill = "Average\nSensitivity")+scale_x_discrete(labels=c("0.5", "1", "2" ))+scale_fill_viridis()+theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"), strip.text.y = element_text(size = 12, colour = "darkblue", face="bold"))+facet_grid(type~metric)+theme(plot.margin=unit(c(1,1,-0.5,1),"cm"))+xlab("average group difference log2FC")
library(viridis)
ggplot(well_balanced_design,aes(x=group_diff,y=batch_diff))+geom_tile(aes(width=0.97,height=0.97,fill=avg_val),color="white")+geom_text(aes(label=txtlab,color=labtype),show.legend = F) + scale_colour_manual(values=c("black", "white")) + theme(legend.key = element_rect(fill="steel blue",size=0.5, linetype="solid"),legend.title = element_text(margin = margin(b = 0.3, unit = 'cm')),axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 30, l = 0))) + theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank()) + theme(plot.margin = unit(c(2,1,1,1), "cm")) + ylab("average batch difference log2FC") + labs(fill = "Average\nSensitivity")+scale_x_discrete(labels=c("0.5", "1", "2" ))+scale_fill_viridis()+theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"), strip.text.y = element_text(size = 12, colour = "darkblue", face="bold"))+facet_grid(type~metric)+theme(plot.margin=unit(c(1,1,-0.5,1),"cm"))+xlab("average group difference log2FC")
well_balanced_design <- batch_res
well_balanced_design$type <- factor(well_balanced_design$type,levels = c("uncorrected", "corrected"))
well_balanced_design$group_diff <- as.character(well_balanced_design$group_diff)
well_balanced_design <- well_balanced_design %>% dplyr::mutate(txtlab = paste(round(avg_val,2),round(sd_val,2),sep = " ± "),labtype=ifelse(avg_val<=50,"low","high"))
ggplot(well_balanced_design,aes(x=group_diff,y=batch_diff))+geom_tile(aes(width=0.97,height=0.97,fill=avg_val),color="white")+geom_text(aes(label=txtlab,color=labtype),show.legend = F) + scale_colour_manual(values=c("black", "white")) + theme(legend.key = element_rect(fill="steel blue",size=0.5, linetype="solid"),legend.title = element_text(margin = margin(b = 0.3, unit = 'cm')),axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 30, l = 0))) + theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank()) + theme(plot.margin = unit(c(2,1,1,1), "cm")) + ylab("average batch difference log2FC") + labs(fill = "Average\nSensitivity")+scale_x_discrete(labels=c("0.5", "1", "2" ))+scale_fill_viridis()+theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"), strip.text.y = element_text(size = 12, colour = "darkblue", face="bold"))+facet_grid(type~metric)+theme(plot.margin=unit(c(1,1,-0.5,1),"cm"))+xlab("average group difference log2FC")
well_balanced_design_plot <- ggplot(well_balanced_design,aes(x=group_diff,y=batch_diff))+geom_tile(aes(width=0.97,height=0.97,fill=avg_val),color="white")+geom_text(aes(label=txtlab,color=labtype),show.legend = F) + scale_colour_manual(values=c("black", "white")) + theme(legend.key = element_rect(fill="steel blue",size=0.5, linetype="solid"),legend.title = element_text(margin = margin(b = 0.3, unit = 'cm')),axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 30, l = 0))) + theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_blank(),panel.background = element_blank()) + theme(plot.margin = unit(c(2,1,1,1), "cm")) + ylab("average batch difference log2FC") + labs(fill = "Average\nSensitivity")+scale_x_discrete(labels=c("0.5", "1", "2" ))+scale_fill_viridis()+theme(axis.text.x = element_text(face="bold", size=12),axis.text.y = element_text(face="bold", size=12),plot.title = element_text(size=12,face="bold",hjust = 0.5),axis.title.x = element_text(size=12, face="bold"),axis.title.y = element_text(size=12, face="bold"),legend.title = element_text(size=12, face="bold"),legend.text = element_text(size=12, face="bold"))+theme(strip.background =element_rect(colour="black",fill="white"),strip.text.x = element_text(size = 12, colour = "darkblue", face="bold"), strip.text.y = element_text(size = 12, colour = "darkblue", face="bold"))+facet_grid(type~metric)+theme(plot.margin=unit(c(1,1,-0.5,1),"cm"))+xlab("average group difference log2FC")
ggsave("~/Documents/Projects/causalAIRR/well_balanced_design_plot.png",plot = well_balanced_design_plot, width=5, height=4)
ggsave("~/Documents/Projects/causalAIRR/well_balanced_design_plot.png",plot = well_balanced_design_plot, width=6, height=3)
ggsave("~/Documents/Projects/causalAIRR/well_balanced_design_plot.png",plot = well_balanced_design_plot, width=7, height=4)
params_grid <- expand.grid(c(1), c(0.5,1,2))
View(params_grid)
sim_params_with_batch_12 <-
list(
approx_n_genes = 5000,
n_examples = 12,
batch1_indices = 1:6,
batch2_indices = 7:12,
batch1_group1_indices = 1:3,
batch1_group2_indices = 4:6,
batch2_group1_indices = 7:9,
batch2_group2_indices = 10:12,
group1_indices = c(1:3, 7:9),
group2_indices = c(4:6, 10:12),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = TRUE
)
sim_params_without_batch_12 <-
list(
approx_n_genes = 5000,
n_examples = 12,
group1_indices = 1:6,
group2_indices = 7:12,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = FALSE
)
params_grid <- expand.grid(c(1), c(0.5,1,2))
multi_res_12 <- multi_param_rep_sim(params_grid = params_grid, sim_params_with_batch_12, n_times = 5)
multi_res_12 <- multi_param_rep_sim(params_grid = params_grid, sim_params_with_batch_12, n_times = 5)
sim_params_with_batch_12 <-
list(
approx_n_genes = 5000,
n_examples = 12,
batch1_indices = 1:6,
batch2_indices = 7:12,
batch1_group1_indices = 1:3,
batch1_group2_indices = 4:6,
batch2_group1_indices = 7:9,
batch2_group2_indices = 10:12,
group1_indices = c(1:3, 7:9),
group2_indices = c(4:6, 10:12),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = TRUE
)
sim_params_without_batch_12 <-
list(
approx_n_genes = 5000,
n_examples = 12,
group1_indices = 1:6,
group2_indices = 7:12,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = FALSE
)
params_grid <- expand.grid(c(1), c(0.5,1,2))
multi_res_12 <- multi_param_rep_sim(params_grid = params_grid, sim_params_with_batch_12, n_times = 5)
res_1 <- rep_simulations(sim_params_list = sim_params_with_batch_12, n_times=2)
set.seed(123)
sim_params <-
list(
approx_n_genes = 5000,
n_examples = 60,
batch1_indices = 1:30,
batch2_indices = 31:60,
batch1_group1_indices = 1:20,
batch1_group2_indices = 21:30,
batch2_group1_indices = 31:40,
batch2_group2_indices = 41:60,
group1_indices = c(1:20, 31:40),
group2_indices = c(21:30, 41:60),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = TRUE
)
results_list <- list()
data_objs_batch <- simulate_exprsmat_with_batch_and_group_differences(sim_params = sim_params)
names(data_objs_batch)
sim_params_without_batch <-
list(
approx_n_genes = 5000,
n_examples = 60,
group1_indices = 1:30,
group2_indices = 31:60,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = FALSE
)
sim_params <- sim_params_without_batch
single_analysis_no_batch <- function(sim_params){
results_list <- list()
data_objs <- simulate_exprsmat_with_group_differences(sim_params = sim_params)
results_list <- deseq_feature_selection(data_objs$exprs_mat, data_objs$metadata, data_objs$group_means_filt, data_objs$diff_exp_indices, sim_params, results_list)
data_objs$data_signif <- results_list$signif_feature_mat
signif_features <- rownames(data_objs$data_signif)
results_list$metrics <- results_list$metrics %>% dplyr::mutate(group_diff = sim_params$avg_log2FC_between_groups, seed=sim_params$seed, type = "no batch effect")
results <- list(deseq_results = results_list$metrics, simulated_data_objs=data_objs, sim_params = sim_params)
return(results)
}
res_1 <- single_analysis_no_batch(sim_params)
names(res_1)
res_1$deseq_results
sim_params <-
list(
approx_n_genes = 5000,
n_examples = 60,
batch1_indices = 1:30,
batch2_indices = 31:60,
batch1_group1_indices = 1:20,
batch1_group2_indices = 21:30,
batch2_group1_indices = 31:40,
batch2_group2_indices = 41:60,
group1_indices = c(1:20, 31:40),
group2_indices = c(21:30, 41:60),
batch_difference_threshold = 1,
n_true_diff_genes = 500,
n_true_upreg_genes = 250,
max_baseline_log2FC_between_groups = 0.25,
avg_log2FC_between_groups = 1,
train_split_prop = 0.70,
batch_effects_exist = TRUE
)
#' Run a single iteration of analysis with the parameter specifications
#'
#' @param sim_params A list object in R containing parameter specifications to run the analysis, where the legal parameters are described in the documentation
#'
#' @return A list containing results
#' @export
#'
run_single_analysis <- function(sim_params){
library(tidyr)
if(sim_params$batch_effects_exist){
results <- single_analysis_with_batch(sim_params=sim_params)
} else {
results <- single_analysis_no_batch(sim_params=sim_params)
}
return(results)
}
res_2 <- run_single_analysis(sim_params)
View(res_2)
q()
